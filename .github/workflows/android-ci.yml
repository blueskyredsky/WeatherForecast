name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_tests:
    name: Run Unit and UI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant Execute Permission to gradlew
        run: chmod +x gradlew

      - name: Create local.properties for API Key
        run: echo "API_KEY=${{ secrets.API_KEY }}" > local.properties

      # ------------------------------------
      # 1. Run Unit Tests
      # ------------------------------------
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      # ------------------------------------
      # 2. Run UI/Instrumented Tests
      # ------------------------------------
      - name: Run UI Tests with Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: default
          arch: x86_64
          profile: Nexus 6
          timeout: 600
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload Test Reports (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/build/reports/'

  build_apks:
    name: Build APKs and AAB
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant Execute Permission to gradlew
        run: chmod +x gradlew

      - name: Create local.properties for API Key
        run: echo "API_KEY=${{ secrets.API_KEY }}" > local.properties

      # ------------------------------------
      # 3. Build Debug and Release Versions
      # ------------------------------------
      - name: Build Debug and Release APKs
        run: ./gradlew assembleDebug assembleRelease

      # ------------------------------------
      # 4. Upload Build Artifacts
      # ------------------------------------
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Release Artifacts (if successful)
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: app-release-artifacts
          path: app/build/outputs/apk/release/*.apk # Or aab if you run 'bundleRelease'